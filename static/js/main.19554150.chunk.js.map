{"version":3,"sources":["components/Card.js","components/CardList.js","components/Searchbox.js","components/Scroll.js","containers/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","robots","map","user","i","Searchbox","searchField","searchChange","type","placeholder","onChange","Scroll","style","overflowY","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filterRobot","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAZF,SAACC,GACV,OACI,sBAAKC,UAAU,kDAAf,UACI,qBAAKC,IAAI,GAAGC,IAAG,+BAA0BH,EAAMI,GAAhC,cACf,gCACI,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCSXC,EAdE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACIA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACA,cAAC,EAAD,CAEAP,GAAII,EAAOG,GAAGP,GACdC,KAAMG,EAAOG,GAAGN,KAChBC,MAAOE,EAAOG,GAAGL,OAHZE,EAAOG,GAAGP,QCOZQ,EAbG,SAAC,GAA8B,EAA7BC,YAA8B,IAAlBC,EAAiB,EAAjBA,aAC5B,OACI,qBAAKb,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVc,KAAK,OACLC,YAAY,gBACZC,SAAUH,OCCXI,EARA,SAAClB,GACZ,OACI,qBAAKmB,MAAO,CAACC,UAAU,SAASC,OAAO,SAAvC,SACKrB,EAAMsB,YCiBJC,G,wDAnBX,WAAYvB,GAAO,IAAD,8BACd,cAAMA,IACDwB,MAAQ,CACTC,UAAW,GAHD,E,8DAOAC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAW,M,+BAI1B,OAAGG,KAAKJ,MAAMC,SACH,oEAEJG,KAAK5B,MAAMsB,a,GAhBCQ,cC6CZC,E,kDAvCX,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAChB,YAAcoB,EAAMC,OAAOC,SAb1C,EAAKX,MAAQ,CACThB,OAAS,GACTK,YAAc,IAJT,E,gEAQO,IAAD,OACfuB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACrB,OAASgC,S,+BAOlC,IAAD,EACyBZ,KAAKJ,MAA3BhB,EADH,EACGA,OAAOK,EADV,EACUA,YACR4B,EAAcjC,EAAOkC,QAAO,SAAAlC,GAC9B,OAAOA,EAAOH,KAAKsC,cAAcC,SAAS/B,EAAY8B,kBAE1D,OAASnC,EAAOqC,OAGZ,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWa,aAAcc,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACC,cAAC,EAAD,CAAUxB,OAAUiC,WAPjC,+C,GAzBUX,aCKHgB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.19554150.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    return(\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow shadow-5\">\r\n            <img alt=\"\" src={`https://robohash.org/${props.id}?200x200`}/>\r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <p>{props.email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    return(\r\n        robots.map((user,i)=>{\r\n            return (\r\n            <Card \r\n            key={robots[i].id} \r\n            id={robots[i].id} \r\n            name={robots[i].name} \r\n            email={robots[i].email}>\r\n            </Card>\r\n            )})\r\n        );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Searchbox = ({searchField,searchChange}) =>{\r\n    return(\r\n        <div className=\"pa2\">\r\n            <input \r\n                className=\"pa3 ba b--green bg-lightest-blue\" \r\n                type=\"text\" \r\n                placeholder=\"search robots\"\r\n                onChange={searchChange}\r\n                />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Searchbox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY:\"scroll\",height:\"500px\"}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError : false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error,info){\r\n        this.setState({hasError : true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Ooops. There is a technical Issue.</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport Searchbox from '../components/Searchbox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\nimport ErrorBoundry from './ErrorBoundry';\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            robots : [],\r\n            searchField : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n        .then(response => response.json())\r\n        .then(users => this.setState({robots : users}));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchField : event.target.value});\r\n    }\r\n\r\n    render(){\r\n        const {robots,searchField} = this.state;\r\n        const filterRobot = robots.filter(robots =>{\r\n            return robots.name.toLowerCase().includes(searchField.toLowerCase());\r\n        });\r\n        return (!robots.length) ? \r\n        <h2>Loading..</h2> : \r\n        (\r\n            <div className=\"tc\">\r\n                <h1 className=\"f1\">Robo Friends</h1>\r\n                <Searchbox searchChange={this.onSearchChange} />\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                     <CardList robots = {filterRobot}/>\r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport 'tachyons';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <App/>\r\n  , \r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}